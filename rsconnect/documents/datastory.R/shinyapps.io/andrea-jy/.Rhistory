q()
Update
knitr::opts_chunk$set(echo = TRUE)
billboard
library(tidyverse)
library("tidyverse")
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
billboard
# Slide 8: Tidy vs Non-Tidy Datasets (Using Tribble())
tidydata <- tribble(
~country, ~year, ~cases, ~population,
"Afghanistan", 1999, 745, 19987071,
"Afghanistan", 2000, 2666, 20595360,
"Brazil", 1999, 37737, 172006362,
"Brazil", 2000, 80488, 174504898,
"China", 1999, 212258, 1272915272,
"China", 2000, 213766, 1280428583)
tidydata
nontidydata <- tribble(
~country,~year,~rate,
"Afghanistan", 1999, "745/19987071",
"Afghanistan", 2000, "2666/20595360",
"Brazil", 1999, "37737/172006362",
"Brazil", 2000, "80488/174504898",
"China", 1999, "212258/1272915272",
"China", 2000, "213766/1280428583")
nontidydata
# Slide 11:
# Slide 12:
# Slide 14:
# Slide 18:
# Slide 19:
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk")
names_to = "column week",
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk")
names_to = "column week",
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk"),
names_to = "column week",
values_to = "rank",
values_drop_na = TRUE
) %>% mutate(week = parse_number(week))
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk"),
names_to = "column week",
values_to = "rank",
values_drop_na = TRUE
) %>% mutate(week = parse_number(column week))
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk"),
names_to = "column week",
values_to = "rank",
values_drop_na = TRUE) %>% mutate(week = parse_number(column week))
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk"),
names_to = "column week",
values_to = "rank",
values_drop_na = TRUE) %>% mutate(week = parse_number("column week"))
tidiedbb %>% ggplot(aes(x="week", y="rank")) + geom_line()
library(c(tidyverse, ggplot2))
library(c(tidyverse, ggplot))
library(tidyverse)
library(ggplot2)
billboard
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk"),
names_to = "column week",
values_to = "rank",
values_drop_na = TRUE) %>% mutate(week = parse_number("column week"))
tidiedbb %>% ggplot(aes(x="week", y="rank")) + geom_line()
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk"),
names_to = "column week",
values_to = "rank",
values_drop_na = TRUE) %>% mutate(week = parse_number("column week"))
tidiedbb %>% ggplot(aes(x=week, y=rank)) + geom_line()
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk"),
names_to = "column week",
values_to = "rank",
values_drop_na = TRUE) %>% mutate(week = parse_number(column week))
tidiedbb <- billboard %>% pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE) %>% mutate(week = parse_number(week))
tidiedbb %>% ggplot(aes(x=week, y=rank)) + geom_line()
cms_patient_experience
cms_patient_experience %>% pivot_wider(
id_cols = starts_with("org"),
names_from = measure_cd,
values_from = prf_rate
)
cms_patient_experience
?tribble()
library(dplyr)
# Slide 8: Tidy vs Non-Tidy Datasets (Using Tribble())
tidydata <- tribble(
~country, ~year, ~cases, ~population,
"Afghanistan", 1999, 745, 19987071,
"Afghanistan", 2000, 2666, 20595360,
"Brazil", 1999, 37737, 172006362,
"Brazil", 2000, 80488, 174504898,
"China", 1999, 212258, 1272915272,
"China", 2000, 213766, 1280428583)
tidydata
nontidydata <- tribble(
~country,~year,~rate,
"Afghanistan", 1999, "745/19987071",
"Afghanistan", 2000, "2666/20595360",
"Brazil", 1999, "37737/172006362",
"Brazil", 2000, "80488/174504898",
"China", 1999, "212258/1272915272",
"China", 2000, "213766/1280428583")
nontidydata
# Slide 11: Separate() to separate a a series of characters according to certain characters between them (e.g. /,. )
tidieddata <- nontidydata %>% separate(rate, into = c("cases", "population"), sep = "/")
# Slide 12: pivot_longer() to convert columns into rows
newtidieddata <- tidieddata %>%
pivot_longer(
cols = cases:population,
names_to = "measurement",
values_to = "value")
newtidieddata
# Slide 14: pivot_longer() another example
df <- tribble(
~id, ~bp1, ~bp2,
"A", 100, 120,
"B", 140, 115,
"C", 120, 125
)
df
df %>%
pivot_longer(
cols = bp1:bp2,
names_to = "measurement",
values_to = "value"
)
# Slide 18: pivot_wider() (Opposite of pivot_longer())
newtidieddata %>% pivot_wider(names_from="measurement", values_from="value")
# Slide 19: pivot_wider() generating NA values
df <- tribble(
~id, ~measurement, ~value,
"A", "bp1", 100,
"B", "bp1", 140,
"B", "bp2", 115,
"A", "bp2", 120,
"A", "bp3", 105
)
df
df %>%
pivot_wider(
names_from = measurement,
values_from = value
)
?separate()
library(dplyr)
library(tidyverse)
# Slide 8: Tidy vs Non-Tidy Datasets (Using Tribble())
tidydata <- tribble(
~country, ~year, ~cases, ~population,
"Afghanistan", 1999, 745, 19987071,
"Afghanistan", 2000, 2666, 20595360,
"Brazil", 1999, 37737, 172006362,
"Brazil", 2000, 80488, 174504898,
"China", 1999, 212258, 1272915272,
"China", 2000, 213766, 1280428583)
tidydata
nontidydata <- tribble(
~country,~year,~rate,
"Afghanistan", 1999, "745/19987071",
"Afghanistan", 2000, "2666/20595360",
"Brazil", 1999, "37737/172006362",
"Brazil", 2000, "80488/174504898",
"China", 1999, "212258/1272915272",
"China", 2000, "213766/1280428583")
nontidydata
# Slide 11: Separate() to separate a a series of characters according to certain characters between them (e.g. /,. )
tidieddata <- nontidydata %>% separate(rate, into = c("cases", "population"), sep = "/")
# Slide 12: pivot_longer() to convert columns into rows
newtidieddata <- tidieddata %>%
pivot_longer(
cols = cases:population,
names_to = "measurement",
values_to = "value")
newtidieddata
# Slide 14: pivot_longer() another example
df <- tribble(
~id, ~bp1, ~bp2,
"A", 100, 120,
"B", 140, 115,
"C", 120, 125
)
df
df %>%
pivot_longer(
cols = bp1:bp2,
names_to = "measurement",
values_to = "value"
)
# Slide 18: pivot_wider() (Opposite of pivot_longer())
newtidieddata %>% pivot_wider(names_from="measurement", values_from="value")
# Slide 19: pivot_wider() generating NA values
df <- tribble(
~id, ~measurement, ~value,
"A", "bp1", 100,
"B", "bp1", 140,
"B", "bp2", 115,
"A", "bp2", 120,
"A", "bp3", 105
)
df
df %>%
pivot_wider(
names_from = measurement,
values_from = value
)
rsconnect::deployApp()
setwd("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect/documents/datastory.R/shinyapps.io/andrea-jy")
rsconnect::deployApp("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect/documents/datastory.R/shinyapps.io/andrea-jy/datastory.dcf")
rsconnect::deployApp("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect/documents/datastory.R")
?deployApp()
rsconnect::deployApp("datastory")
rsconnect::deployApp("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect)
mm
setwd("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect/documents/datastory.R/shinyapps.io/andrea-jy")
rsconnect::deployApp("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect/documents/datastory.R/shinyapps.io/andrea-jy")
rsconnect::deployApp("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect/documents/datastory.R/shinyapps.io/andrea-jy")
rsconnect::deployApp("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect/documents/datastory.R/")
rsconnect::deployApp("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect/documents/datastory.R")
rsconnect::deployApp("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io/rsconnect/documents")
rsconnect::deployApp("C:/Users/User/Desktop/NM2207/GitHub/jyapple15.github.io")
